import React, { useState } from 'react';
import { doshaInfo } from '../data/quizData';
import './Results.css';

const Results = ({ results, onRestart }) => {
  const [activeTab, setActiveTab] = useState('overview');
  const [showShareModal, setShowShareModal] = useState(false);

  const { scores, percentages, constitutionType, primaryDosha, recommendations } = results;

  const getDoshaColor = (dosha) => {
    const colors = {
      vata: '#8B4513',
      pitta: '#FF6B35', 
      kapha: '#4A90A4'
    };
    return colors[dosha] || '#666';
  };

  const shareResults = () => {
    const shareText = `I just discovered my Ayurvedic body type! I'm ${constitutionType}. Find out yours at Veda Verse - Know Your Body Type Quiz!`;
    
    if (navigator.share) {
      navigator.share({
        title: 'My Ayurvedic Body Type Results',
        text: shareText,
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(shareText);
      alert('Results copied to clipboard!');
    }
  };

  const downloadResults = () => {
    const resultsText = `
AYURVEDIC BODY TYPE ANALYSIS RESULTS
====================================

Constitution Type: ${constitutionType}

Dosha Percentages:
- Vata: ${percentages.vata}%
- Pitta: ${percentages.pitta}%  
- Kapha: ${percentages.kapha}%

PRIMARY DOSHA: ${primaryDosha?.toUpperCase()}
${primaryDosha ? doshaInfo[primaryDosha]?.name : ''} (${primaryDosha ? doshaInfo[primaryDosha]?.element : ''})

CHARACTERISTICS:
${primaryDosha ? doshaInfo[primaryDosha]?.primaryCharacteristics.map(char => `‚Ä¢ ${char}`).join('\n') : ''}

BALANCING TIPS:
${recommendations.immediate.map(tip => `‚Ä¢ ${tip}`).join('\n')}

DIETARY RECOMMENDATIONS:
${recommendations.dietary.map(rec => `‚Ä¢ ${rec}`).join('\n')}

LIFESTYLE RECOMMENDATIONS:
${recommendations.lifestyle.map(rec => `‚Ä¢ ${rec}`).join('\n')}

Generated by Veda Verse - Know Your Body Type Quiz
    `;

    const blob = new Blob([resultsText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `prakriti-analysis-${new Date().toISOString().split('T')[0]}.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="results-container">
      {/* Header */}
      <div className="results-header">
        <h1>Your Ayurvedic Body Type</h1>
        <div className="constitution-type">
          <span className="constitution-label">Constitution:</span>
          <span className="constitution-value">{constitutionType}</span>
        </div>
      </div>

      {/* Dosha Visualization */}
      <div className="dosha-visualization">
        <h3>Your Dosha Balance</h3>
        <div className="dosha-chart">
          {Object.entries(percentages).map(([dosha, percentage]) => (
            <div key={dosha} className="dosha-bar-container">
              <div className="dosha-label">
                <span className="dosha-name">{dosha.charAt(0).toUpperCase() + dosha.slice(1)}</span>
                <span className="dosha-percentage">{percentage}%</span>
              </div>
              <div className="dosha-bar">
                <div 
                  className="dosha-fill"
                  style={{ 
                    width: `${percentage}%`,
                    backgroundColor: getDoshaColor(dosha)
                  }}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="results-tabs">
        <button 
          className={`tab-button ${activeTab === 'overview' ? 'active' : ''}`}
          onClick={() => setActiveTab('overview')}
        >
          Overview
        </button>
        <button 
          className={`tab-button ${activeTab === 'recommendations' ? 'active' : ''}`}
          onClick={() => setActiveTab('recommendations')}
        >
          Recommendations
        </button>
        <button 
          className={`tab-button ${activeTab === 'detailed' ? 'active' : ''}`}
          onClick={() => setActiveTab('detailed')}
        >
          Detailed Analysis
        </button>
      </div>

      {/* Tab Content */}
      <div className="tab-content">
        {activeTab === 'overview' && (
          <div className="overview-content">
            {primaryDosha && doshaInfo[primaryDosha] && (
              <div className="primary-dosha-info">
                <h3 style={{ color: getDoshaColor(primaryDosha) }}>
                  Primary Dosha: {doshaInfo[primaryDosha].name}
                </h3>
                <p className="dosha-element">
                  <strong>Element:</strong> {doshaInfo[primaryDosha].element}
                </p>
                
                <div className="dosha-qualities">
                  <h4>Key Qualities:</h4>
                  <div className="qualities-list">
                    {doshaInfo[primaryDosha].qualities.map((quality, index) => (
                      <span key={index} className="quality-tag">{quality}</span>
                    ))}
                  </div>
                </div>

                <div className="characteristics">
                  <h4>Primary Characteristics:</h4>
                  <ul>
                    {doshaInfo[primaryDosha].primaryCharacteristics.map((char, index) => (
                      <li key={index}>{char}</li>
                    ))}
                  </ul>
                </div>
              </div>
            )}

            <div className="quick-tips">
              <h4>Quick Balancing Tips:</h4>
              <div className="tips-grid">
                {recommendations.immediate.map((tip, index) => (
                  <div key={index} className="tip-card">
                    <span className="tip-icon">üí°</span>
                    <span className="tip-text">{tip}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {activeTab === 'recommendations' && (
          <div className="recommendations-content">
            <div className="recommendation-section">
              <h4>üçΩÔ∏è Dietary Recommendations</h4>
              <ul>
                {recommendations.dietary.map((rec, index) => (
                  <li key={index}>{rec}</li>
                ))}
              </ul>
            </div>

            <div className="recommendation-section">
              <h4>üßò Lifestyle Recommendations</h4>
              <ul>
                {recommendations.lifestyle.map((rec, index) => (
                  <li key={index}>{rec}</li>
                ))}
              </ul>
            </div>

            <div className="recommendation-section">
              <h4>üå± Seasonal Care</h4>
              <ul>
                {recommendations.seasonal.map((rec, index) => (
                  <li key={index}>{rec}</li>
                ))}
              </ul>
            </div>
          </div>
        )}

        {activeTab === 'detailed' && (
          <div className="detailed-content">
            <div className="all-doshas-info">
              {Object.entries(doshaInfo).map(([dosha, info]) => (
                <div key={dosha} className={`dosha-detail ${dosha === primaryDosha ? 'primary' : ''}`}>
                  <h4 style={{ color: getDoshaColor(dosha) }}>
                    {info.name} ({info.element}) - {percentages[dosha]}%
                  </h4>
                  
                  <div className="dosha-section">
                    <h5>Balancing Tips:</h5>
                    <ul>
                      {info.balancingTips.map((tip, index) => (
                        <li key={index}>{tip}</li>
                      ))}
                    </ul>
                  </div>

                  <div className="dosha-section">
                    <h5>Diet Guidelines:</h5>
                    <ul>
                      {info.diet.map((guideline, index) => (
                        <li key={index}>{guideline}</li>
                      ))}
                    </ul>
                  </div>

                  <div className="dosha-section">
                    <h5>Lifestyle Practices:</h5>
                    <ul>
                      {info.lifestyle.map((practice, index) => (
                        <li key={index}>{practice}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>

      {/* Action Buttons */}
      <div className="results-actions">
        <button className="action-button secondary" onClick={onRestart}>
          Retake Quiz
        </button>
        <button className="action-button secondary" onClick={shareResults}>
          Share Results
        </button>
        <button className="action-button primary" onClick={downloadResults}>
          Download Report
        </button>
      </div>

      {/* Disclaimer */}
      <div className="disclaimer">
        <p>
          <strong>Disclaimer:</strong> This analysis is for educational purposes only and should not replace 
          professional medical advice. For personalized health guidance, consult with a qualified 
          Ayurvedic practitioner or healthcare provider.
        </p>
      </div>
    </div>
  );
};

export default Results;